------------------------------------------------------------------------
Intel(R) Threading Building Blocks - Release Notes
		  Version 4.0
------------------------------------------------------------------------


System Requirements
-------------------

Intel(R) Threading Building Blocks (Intel(R) TBB) is available
commercially (see http://software.intel.com/en-us/intel-tbb) as a
binary distribution, and in open source, in both source and binary
forms (see http://threadingbuildingblocks.org).

When built from source, Intel(R) TBB is intended to be highly portable
and so supports a wide variety of operating systems and platforms (see
http://threadingbuildingblocks.org for more details).

Binary distributions, including commercial distributions, are validated
and officially supported for the hardware, software, operating systems
and compilers listed here.

Hardware - Recommended

    Microsoft* Windows* Systems
	Intel(R) Core(TM) 2 Duo processor or Intel(R) Xeon(R) processor
	    or higher
    Linux* Systems
	Intel(R) Core(TM) 2 Duo processor or Intel(R) Xeon(R) processor
	    or higher
    Mac OS* X Systems
	Intel(R) Core(TM) 2 Duo processor or higher

Hardware - Supported

    Intel(R) Pentium(R) 4 processor family and higher
    Non Intel(R) processors compatible with the above processors

Software - Minimum Requirements

    Supported operating system (see below)
    Supported compiler (see below)
    Adobe(R) Reader(R)* 7.0 or higher

Software - Recommended

    Intel(R) Parallel Studio XE 2011 and higher
    Intel(R) Parallel Studio 2011 and higher

Software - Supported Operating Systems

    Microsoft* Windows* Systems
	Microsoft* Windows* 7
	Microsoft* Windows* Server 2008
	Microsoft* Windows* Vista
	Microsoft* Windows* XP Professional
	Microsoft* Windows* Server 2003 (deprecated)
    Linux* Systems
	Red Hat* Enterprise Linux* 6, 5, 4 (deprecated)
	Fedora* 15
	Asianux* 4.0, 3.0
	Debian* GNU/Linux* 6.0
	Ubuntu* 11.04, 10.04 LTS
	SuSE* Linux* Enterprise Server 10, 11SP1
    Mac OS* X Systems
	Mac OS* X 10.6.7 or higher

Software - Supported Compilers

    Intel(R) C++ Composer XE 2011 and higher
    Intel(R) C++ Compiler 11.1
    Microsoft* Visual C++ 10.0 (Microsoft* Visual Studio* 2010,
	Windows* systems only)
    Microsoft* Visual C++ 9.0 (Microsoft* Visual Studio* 2008,
	Windows* systems only)
    Microsoft* Visual C++ 8.0 (Microsoft* Visual Studio* 2005,
	Windows* systems only, deprecated)
    For each supported Linux* operating system, the standard gcc
	version provided with that operating system is supported,
	including gcc 3.4 through 4.6
    For each supported Mac OS* X operating system, the standard gcc
	version provided with that operating system is supported,
	including: 4.0.1 or higher (Xcode* tool suite 3.2.5 or higher)


Known Issues
------------

Please note the following with respect to this particular release of
Intel(R) Threading Building Blocks.

Library Issues

    - If an application uses static version of MSVCRT libraries or uses
	TBB DLL built with static MSVCRT (vc_mt variant), and throws
	an exception from a functor passed to task_group::run_and_wait(),
	the exception will not be intercepted by TBB and will not result
	in cancellation of the task_group. For a workaround, catch the
	exception in the functor and explicitly cancel the task_group.

    - If you are using Intel(R) Threading Building Blocks and OpenMP*
	constructs mixed together in rapid succession in the same
	program, and you are using Intel(R) compilers for your OpenMP*
	code, set KMP_BLOCKTIME to a small value (e.g., 20 milliseconds)
	to improve performance.  This setting can also be made within
	your OpenMP* code via the kmp_set_blocktime() library call.  See
	the Intel(R) compiler OpenMP* documentation for more details on
	KMP_BLOCKTIME and kmp_set_blocktime().

    - In general, non-debug ("release") builds of applications or
	examples should link against the non-debug versions of the
	Intel(R) Threading Building Blocks libraries, and debug builds
	should link against the debug versions of these libraries.  On
	Windows* systems, compile with /MD and use Intel(R) Threading
	Building Blocks release libraries, or compile with /MDd and use
	debug libraries; not doing so may cause run-time failures.  See
	the Tutorial in the product "doc" sub-directory for more details
	on debug vs. release libraries.
    
------------------------------------------------------------------------
Copyright (C) 2005-2011 Intel Corporation.  All Rights Reserved.

Intel, Xeon and Pentium are registered trademarks or trademarks of
Intel Corporation or its subsidiaries in the United States and other countries.

* Other names and brands may be claimed as the property of others.
